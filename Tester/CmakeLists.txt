# PROJECT(SensorFusion)

find_package (Eigen3 3.3 REQUIRED NO_MODULE)
if (FILTERPLOT)
	find_package(OpenCV REQUIRED)
endif()

if (FILTERPLOT)
include_directories (
		${PROJECT_SOURCE_DIR}/PlotterLib
		${PROJECT_SOURCE_DIR}/SensorFusionLib
		${PROJECT_SOURCE_DIR}/GINOPLib
		${Eigen_INCLUDE_DIRS}
		)
else()
include_directories (
		${PROJECT_SOURCE_DIR}/SensorFusionLib
		${PROJECT_SOURCE_DIR}/GINOPLib
		${Eigen_INCLUDE_DIRS}
		)
endif()

# Add all header and cpp files in the directory to the project
set (HEADERS
	pch.h
	Simulation.h
	Simulation_youBot_Kalman.h
	Simulation_youBot_WAUKF.h
	)
	

set (SOURCES
	main.cpp
	pch.cpp
	Simulation.cpp
	Simulation_youBot_Kalman.cpp
	Simulation_youBot_WAUKF.cpp
	)
	

# Add the dinamic library target to the project
add_executable (Tester ${SOURCES} ${HEADERS})

# Link with dependency libraries
if (FILTERPLOT)
	target_link_libraries (Tester PlotterLib SensorFusionLib Eigen3::Eigen GINOPLib	
	${OpenCV_LIBS})
	add_compile_definitions(FILTERPLOT)
else()
	target_link_libraries (Tester SensorFusionLib Eigen3::Eigen GINOPLib)
endif()

set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MTd")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /MT")
set(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /MT")