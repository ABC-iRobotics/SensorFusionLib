// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var DataMsgContentNameSpace = DataMsgContentNameSpace || {};

/**
 * @constructor
 */
DataMsgContentNameSpace.Msg = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DataMsgContentNameSpace.Msg}
 */
DataMsgContentNameSpace.Msg.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DataMsgContentNameSpace.Msg=} obj
 * @returns {DataMsgContentNameSpace.Msg}
 */
DataMsgContentNameSpace.Msg.getRootAsMsg = function(bb, obj) {
  return (obj || new DataMsgContentNameSpace.Msg).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
DataMsgContentNameSpace.Msg.prototype.valueVector = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
DataMsgContentNameSpace.Msg.prototype.valueVectorLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float32Array}
 */
DataMsgContentNameSpace.Msg.prototype.valueVectorArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
DataMsgContentNameSpace.Msg.prototype.varianceMatrix = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
DataMsgContentNameSpace.Msg.prototype.varianceMatrixLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float32Array}
 */
DataMsgContentNameSpace.Msg.prototype.varianceMatrixArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {flatbuffers.Long}
 */
DataMsgContentNameSpace.Msg.prototype.timestampInUs = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 */
DataMsgContentNameSpace.Msg.startMsg = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valueVectorOffset
 */
DataMsgContentNameSpace.Msg.addValueVector = function(builder, valueVectorOffset) {
  builder.addFieldOffset(0, valueVectorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
DataMsgContentNameSpace.Msg.createValueVectorVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
DataMsgContentNameSpace.Msg.startValueVectorVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} varianceMatrixOffset
 */
DataMsgContentNameSpace.Msg.addVarianceMatrix = function(builder, varianceMatrixOffset) {
  builder.addFieldOffset(1, varianceMatrixOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
DataMsgContentNameSpace.Msg.createVarianceMatrixVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
DataMsgContentNameSpace.Msg.startVarianceMatrixVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} timestampInUs
 */
DataMsgContentNameSpace.Msg.addTimestampInUs = function(builder, timestampInUs) {
  builder.addFieldInt64(2, timestampInUs, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DataMsgContentNameSpace.Msg.endMsg = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
DataMsgContentNameSpace.Msg.finishMsgBuffer = function(builder, offset) {
  builder.finish(offset);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valueVectorOffset
 * @param {flatbuffers.Offset} varianceMatrixOffset
 * @param {flatbuffers.Long} timestampInUs
 * @returns {flatbuffers.Offset}
 */
DataMsgContentNameSpace.Msg.createMsg = function(builder, valueVectorOffset, varianceMatrixOffset, timestampInUs) {
  DataMsgContentNameSpace.Msg.startMsg(builder);
  DataMsgContentNameSpace.Msg.addValueVector(builder, valueVectorOffset);
  DataMsgContentNameSpace.Msg.addVarianceMatrix(builder, varianceMatrixOffset);
  DataMsgContentNameSpace.Msg.addTimestampInUs(builder, timestampInUs);
  return DataMsgContentNameSpace.Msg.endMsg(builder);
}

// Exports for Node.js and RequireJS
this.DataMsgContentNameSpace = DataMsgContentNameSpace;
